# This is a basic workflow to help you get started with Actions

name: deploy

on:
  push:
    branches: [ "main" ] # main에 push가 될 때 CD가 일어나도록 핸들링
    
env:
  DOCKER_HUB_USERNAME: snowdrop6342
  AWS_REGION: ap-northeast-2
  EB_ENVIRONMENT_NAME: Tell-me-application-env-2
  EB_APPLICATION_NAME: tell-me-application
  EB_DEPLOYMENT_PACKAGE: ./tellme/docker-compose.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.3.0 
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: .tellme/src/main/resources/application.yml 
        env:
          spring.datasource.url: ${{ secrets.PROD_DATABASE_URL }} 
          spring.datasource.username: ${{ secrets.PROD_DATABASE_USERNAME }} 
          spring.datasource.password: ${{ secrets.PROD_DATABASE_PASSWORD }} 
          constant.jwt.secret-key : ${{ secrets.JWT_SECRET_KEY }}
          spring.security.oauth2.client.registration.kakao.client-id : ${{ secrets.KAKAO_CLINET_ID }}
          spring.security.oauth2.client.registration.kakao.client-secret : ${{ secrets.KAKAO_CLIENT_PW }}
          spring.security.oauth2.client.registration.kakao.redirect-uri : ${{ secrets.KAKAO_REDIRECT_URI }}
        
      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push to Dockerhub
        working-directory: ./tellme
        run: ./gradlew jib

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via github actions ${{ github.sha }}
          wait_for_deployment: 60
